import{_ as a,o as t,c as e,R as s}from"./chunks/framework.QnHPwK53.js";const b=JSON.parse('{"title":"代码提交规范","description":"","frontmatter":{},"headers":[],"relativePath":"necessary/codeSpecification.md","filePath":"necessary/codeSpecification.md","lastUpdated":1701390485000}'),n={name:"necessary/codeSpecification.md"},l=s(`<h1 id="代码提交规范" tabindex="-1">代码提交规范 <a class="header-anchor" href="#代码提交规范" aria-label="Permalink to &quot;代码提交规范&quot;">​</a></h1><h2 id="angular提交信息规范" tabindex="-1">Angular提交信息规范 <a class="header-anchor" href="#angular提交信息规范" aria-label="Permalink to &quot;Angular提交信息规范&quot;">​</a></h2><p>提交格式如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span></span>
<span class="line"><span>&lt;BLANK LINE&gt;</span></span>
<span class="line"><span>&lt;body&gt;</span></span>
<span class="line"><span>&lt;BLANK LINE&gt;</span></span>
<span class="line"><span>&lt;footer&gt;</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">tips</p><p>每次提交可以包含页眉(header)、正文(body)和页脚(footer)，每次提交<strong>必须包含页眉内容</strong> 每次提交的信息不超过100个字符</p></div><p>详细文档：<a href="https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#heading=h.uyo6cb12dt6w" target="_blank" rel="noreferrer">AngularJS Git Commit Message Conventions</a></p><h3 id="页眉设置" tabindex="-1">页眉设置 <a class="header-anchor" href="#页眉设置" aria-label="Permalink to &quot;页眉设置&quot;">​</a></h3><p>页眉的格式指定为提交类型(type)、作用域(scope，可选)和主题(subject)</p><h4 id="提交类型" tabindex="-1">提交类型 <a class="header-anchor" href="#提交类型" aria-label="Permalink to &quot;提交类型&quot;">​</a></h4><p>提交类型指定为下面其中一个：</p><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:left;">释义</th></tr></thead><tbody><tr><td style="text-align:center;">build</td><td style="text-align:left;">对构建系统或者外部依赖项进行了修改</td></tr><tr><td style="text-align:center;">ci</td><td style="text-align:left;">对CI配置文件或脚本进行了修改</td></tr><tr><td style="text-align:center;">docs</td><td style="text-align:left;">对文档进行了修改</td></tr><tr><td style="text-align:center;">feat</td><td style="text-align:left;">增加新的特征</td></tr><tr><td style="text-align:center;">fix</td><td style="text-align:left;">修复bug</td></tr><tr><td style="text-align:center;">pref</td><td style="text-align:left;">提高性能的代码更改</td></tr><tr><td style="text-align:center;">refactor</td><td style="text-align:left;">既不是修复bug也不是添加特征的代码重构</td></tr><tr><td style="text-align:center;">style</td><td style="text-align:left;">不影响代码含义的修改，比如空格、格式化、缺失的分号等</td></tr><tr><td style="text-align:center;">test</td><td style="text-align:left;">增加确实的测试或者矫正已存在的测试</td></tr><tr><td style="text-align:center;">chore</td><td style="text-align:left;">构建过程或辅助工具的变动</td></tr></tbody></table><h4 id="作用域" tabindex="-1">作用域 <a class="header-anchor" href="#作用域" aria-label="Permalink to &quot;作用域&quot;">​</a></h4><p>范围可以是任何指定提交更改位置的内容</p><h4 id="主题" tabindex="-1">主题 <a class="header-anchor" href="#主题" aria-label="Permalink to &quot;主题&quot;">​</a></h4><p>主题包括了对本次修改的简洁描述，有以下准则</p><p>使用命令式，现在时态：“改变”不是“已改变”也不是“改变了” 不要大写首字母 不在末尾添加句号</p><h3 id="正文设置" tabindex="-1">正文设置 <a class="header-anchor" href="#正文设置" aria-label="Permalink to &quot;正文设置&quot;">​</a></h3><p>和主题设置类似，使用命令式、现在时态</p><p>应该包含修改的动机以及和之前行为的对比</p><h3 id="页脚设置" tabindex="-1">页脚设置 <a class="header-anchor" href="#页脚设置" aria-label="Permalink to &quot;页脚设置&quot;">​</a></h3><h4 id="breaking-changes" tabindex="-1">Breaking changes <a class="header-anchor" href="#breaking-changes" aria-label="Permalink to &quot;Breaking changes&quot;">​</a></h4><p>不兼容修改指的是本次提交修改了不兼容之前版本的API或者环境变量</p><p>所有不兼容修改都必须在页脚中作为中断更改块提到，以BREAKING CHANGE:开头，后跟一个空格或者两个换行符，其余的信息就是对此次修改的描述，修改的理由和修改注释</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>BREAKING CHANGE: 隔离范围绑定定义已更改，并且</span></span>
<span class="line"><span>    指令控制器注入的注入选项已被删除。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    要迁移代码，请遵循以下示例：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    Before:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    。。。</span></span>
<span class="line"><span>    。。。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    After:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    。。。</span></span>
<span class="line"><span>    。。。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    The removed \`inject\` wasn&#39;t generaly useful for directives so there should be no code using it.</span></span></code></pre></div><h4 id="引用提交的问题" tabindex="-1">引用提交的问题 <a class="header-anchor" href="#引用提交的问题" aria-label="Permalink to &quot;引用提交的问题&quot;">​</a></h4><p>如果本次提交目的是修改issue的话，需要在页脚引用该issue</p><p>以关键字Closes开头，比如</p><p><code>Closes #234</code></p><p>如果修改了多个bug，以逗号隔开</p><p><code>Closes #123, #245, #992</code></p>`,30),p=[l];function i(r,c,d,o,h,g){return t(),e("div",null,p)}const f=a(n,[["render",i]]);export{b as __pageData,f as default};
