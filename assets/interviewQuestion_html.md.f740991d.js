import{_ as s,c as l,o as a,a as n}from"./app.c0be5ae3.js";const o="/images/browser-render.png",A=JSON.parse('{"title":"HTML 相关面试题","description":"","frontmatter":{},"headers":[{"level":2,"title":"html5 有哪些新增标签？","slug":"html5-new-tags","link":"#html5-new-tags","children":[{"level":3,"title":"新的语义和结构元素","slug":"新的语义和结构元素","link":"#新的语义和结构元素","children":[]},{"level":3,"title":"<canvas> 新元素","slug":"canvas-新元素","link":"#canvas-新元素","children":[]},{"level":3,"title":"新多媒体元素","slug":"新多媒体元素","link":"#新多媒体元素","children":[]},{"level":3,"title":"新表单元素","slug":"新表单元素","link":"#新表单元素","children":[]},{"level":3,"title":"已移除的元素","slug":"已移除的元素","link":"#已移除的元素","children":[]}]},{"level":2,"title":"浏览器渲染机制","slug":"browser-render","link":"#browser-render","children":[]},{"level":2,"title":"回流与重绘 (Reflow & Repaint)","slug":"reflow-repaint","link":"#reflow-repaint","children":[{"level":3,"title":"回流（Reflow）","slug":"回流-reflow","link":"#回流-reflow","children":[]},{"level":3,"title":"重绘（Repaint）","slug":"重绘-repaint","link":"#重绘-repaint","children":[]},{"level":3,"title":"影响","slug":"影响","link":"#影响","children":[]},{"level":3,"title":"如何减少回流重绘？","slug":"如何减少回流重绘","link":"#如何减少回流重绘","children":[]}]}],"relativePath":"interviewQuestion/html.md","lastUpdated":1677566414000}'),t={name:"interviewQuestion/html.md"},p=n(`<h1 id="html-相关面试题" tabindex="-1">HTML 相关面试题 <a class="header-anchor" href="#html-相关面试题" aria-hidden="true">#</a></h1><h2 id="html5-new-tags" tabindex="-1">html5 有哪些新增标签？ <a class="header-anchor" href="#html5-new-tags" aria-hidden="true">#</a></h2><p>为了更好地处理今天的互联网应用，HTML5 添加了很多新元素及功能，比如: 图形的绘制，多媒体内容，更好的页面结构，更好的形式处理，和几个 api 拖放元素，定位，包括网页应用程序缓存，存储，网络工作等。</p><h3 id="新的语义和结构元素" tabindex="-1">新的语义和结构元素 <a class="header-anchor" href="#新的语义和结构元素" aria-hidden="true">#</a></h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;article&gt;</code></td><td>定义页面独立的内容区域。</td></tr><tr><td><code>&lt;aside&gt;</code></td><td>定义页面的侧边栏内容。</td></tr><tr><td><code>&lt;bdi&gt;</code></td><td>允许您设置一段文本，使其脱离其父元素的文本方向设置。</td></tr><tr><td><code>&lt;command&gt;</code></td><td>定义命令按钮，比如单选按钮、复选框或按钮。</td></tr><tr><td><code>&lt;details&gt;</code></td><td>用于描述文档或文档某个部分的细节。</td></tr><tr><td><code>&lt;dialog&gt;</code></td><td>用于描述文档或文档某个部分的细节。</td></tr><tr><td><code>&lt;summary&gt;</code></td><td>标签包含 details 元素的标题。</td></tr><tr><td><code>&lt;figure&gt;</code></td><td>规定独立的流内容（图像、图表、照片、代码等等）。</td></tr><tr><td><code>&lt;figcaption&gt;</code></td><td>定义 <code>&lt;figure&gt;</code> 元素的标题。</td></tr><tr><td><code>&lt;footer&gt;</code></td><td>定义 section 或 document 的页脚。</td></tr><tr><td><code>&lt;header&gt;</code></td><td>定义了文档的头部区域。</td></tr><tr><td><code>&lt;mark&gt;</code></td><td>定义带有记号的文本。</td></tr><tr><td><code>&lt;meter&gt;</code></td><td>定义度量衡。仅用于已知最大和最小值的度量。</td></tr><tr><td><code>&lt;nav&gt;</code></td><td>定义导航链接的部分。</td></tr><tr><td><code>&lt;progress&gt;</code></td><td>定义任何类型的任务的进度。</td></tr><tr><td><code>&lt;ruby&gt;</code></td><td>定义 ruby 注释（中文注音或字符）。</td></tr><tr><td><code>&lt;rt&gt;</code></td><td>定义字符（中文注音或字符）的解释或发音。</td></tr><tr><td><code>&lt;rp&gt;</code></td><td>在 ruby 注释中使用，定义不支持 ruby 元素的浏览器所显示的内容。</td></tr><tr><td><code>&lt;section&gt;</code></td><td>定义文档中的节（section、区段）。</td></tr><tr><td><code>&lt;time&gt;</code></td><td>定义日期或时间。</td></tr><tr><td><code>&lt;wbr&gt;</code></td><td>规定在文本中的何处适合添加换行符。</td></tr></tbody></table><h3 id="canvas-新元素" tabindex="-1"><code>&lt;canvas&gt;</code> 新元素 <a class="header-anchor" href="#canvas-新元素" aria-hidden="true">#</a></h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;canvas&gt;</code></td><td>标签定义图形，比如图表和其他图像。该标签基于 JavaScript 的绘图 API。</td></tr></tbody></table><h3 id="新多媒体元素" tabindex="-1">新多媒体元素 <a class="header-anchor" href="#新多媒体元素" aria-hidden="true">#</a></h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;audio&gt;</code></td><td>定义音频内容</td></tr><tr><td><code>&lt;video&gt;</code></td><td>定义视频（video 或者 movie）</td></tr><tr><td><code>&lt;source&gt;</code></td><td>定义多媒体资源 <code>&lt;video&gt;</code> 和<code> &lt;audio&gt;</code></td></tr><tr><td><code>&lt;embed&gt;</code></td><td>定义嵌入的内容，比如插件。</td></tr><tr><td><code>&lt;track&gt;</code></td><td>为诸如 <code>&lt;video&gt;</code> 和 <code>&lt;audio&gt;</code> 元素之类的媒介规定外部文本轨道。</td></tr></tbody></table><h3 id="新表单元素" tabindex="-1">新表单元素 <a class="header-anchor" href="#新表单元素" aria-hidden="true">#</a></h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;datalist&gt;</code></td><td>定义选项列表。请与 input 元素配合使用该元素，来定义 input 可能的值。</td></tr><tr><td><code>&lt;keygen&gt;</code></td><td>规定用于表单的密钥对生成器字段。</td></tr><tr><td><code>&lt;output&gt;</code></td><td>定义不同类型的输出，比如脚本的输出。</td></tr></tbody></table><h3 id="已移除的元素" tabindex="-1">已移除的元素 <a class="header-anchor" href="#已移除的元素" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 以下的 HTML 4.01 元素在HTML5中已经被删除:</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">acronym</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">applet</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">basefont</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">big</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">center</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dir</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">font</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">frame</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">frameset</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">noframes</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">strike</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">tt</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="browser-render" tabindex="-1">浏览器渲染机制 <a class="header-anchor" href="#browser-render" aria-hidden="true">#</a></h2><p>浏览器使用流式布局模型 (Flow Based Layout)</p><ol><li>解析 HTML 生成 DOM 树</li><li>解析 CSS 生成 CSSOM 规则树</li><li>将 DOM 树与 CSSOM 规则树合并在一起生成渲染树 Render Tree</li><li>Layout(回流):根据生成的渲染树，进行回流(Layout)，得到节点的几何信息（位置，大小）</li><li>Painting(重绘):根据渲染树以及回流得到的几何信息，得到节点的绝对像素</li><li>将渲染树每个节点绘制到屏幕</li></ol><p><img src="`+o+`" alt="browser-render"></p><h2 id="reflow-repaint" tabindex="-1">回流与重绘 (Reflow &amp; Repaint) <a class="header-anchor" href="#reflow-repaint" aria-hidden="true">#</a></h2><p>在页面初始<a href="#browser-render"><code>渲染阶段</code></a>，回流不可避免的触发，可以理解成页面一开始是空白的元素，后面添加了新的元素使页面布局发生改变</p><p>当我们对 DOM 的修改引发了 DOM 几何尺寸的变化（比如修改元素的宽、高或隐藏元素等）时，浏览器需要重新计算元素的几何属性，然后再将计算的结果绘制出来。</p><p>当我们对 DOM 的修改导致了样式的变化（color 或 background-color），却并未影响其几何属性时，浏览器不需重新计算元素的几何属性、直接为该元素绘制新的样式，这里就仅仅触发了重绘。</p><h3 id="回流-reflow" tabindex="-1">回流（Reflow） <a class="header-anchor" href="#回流-reflow" aria-hidden="true">#</a></h3><p>当我们的节点发生改变（页面布局和几何信息）时，浏览器重新渲染部分节点或者全部文档，我们称这个过程为回流。</p><div class="info custom-block"><p class="custom-block-title">一些会导致回流的操作：</p><ul><li>页面首次渲染</li><li>浏览器窗口大小发生改变</li><li>元素尺寸或位置发生改变</li><li>元素内容变化（文字数量或图片大小等等）</li><li>元素字体大小变化</li><li>添加或者删除可见的 DOM 元素</li><li>激活 CSS 伪类（例如：:hover）</li><li>查询某些属性或调用某些方法</li></ul></div><p>还有一些容易被忽略的操作：<strong>获取一些特定属性的值</strong></p><blockquote><p>offsetTop、 offsetLeft、 offsetWidth、offsetHeight、 scrollTop、scrollLeft、 scrollWidth、 scrollHeight、 clientTop、clientLeft、clientWidth、clientHeight</p></blockquote><p>这些属性有一个共性，就是需要通过即时计算得到。因此浏览器为了获取这些值，也会进行回流。除此还包括 getComputedStyle 方法，原理是一样的。</p><h3 id="重绘-repaint" tabindex="-1">重绘（Repaint） <a class="header-anchor" href="#重绘-repaint" aria-hidden="true">#</a></h3><p>当页面中元素样式的改变并不影响它在文档流中的位置时（例如：color、background-color、visibility 等），浏览器会将新样式赋予给元素并重新绘制它，这个过程称为重绘。</p><p>一些其他引起重绘行为： 颜色的修改、文本方向的修改、阴影的修改等。</p><h3 id="影响" tabindex="-1">影响 <a class="header-anchor" href="#影响" aria-hidden="true">#</a></h3><p><strong>回流比重绘的代价要更高。</strong></p><p><strong>回流必将引起重绘，重绘不一定会引起回流。</strong></p><p>现代浏览器会对频繁的回流或重绘操作进行优化：</p><p>浏览器会维护一个队列，把所有引起回流和重绘的操作放入队列中，如果队列中的任务数量或者时间间隔达到一个阈值的，浏览器就会将队列清空，进行一次批处理，这样可以把多次回流和重绘变成一次。</p><p>当你访问以下属性或方法时，浏览器会立刻清空队列：</p><ul><li>clientWidth、clientHeight、clientTop、clientLeft</li><li>offsetWidth、offsetHeight、offsetTop、offsetLeft</li><li>scrollWidth、scrollHeight、scrollTop、scrollLeft</li><li>width、height</li><li>getComputedStyle()</li><li>getBoundingClientRect()</li></ul><p><strong>当你获取布局信息的操作的时候，浏览器不得不清空队列，触发回流重绘来返回正确的值。</strong></p><h3 id="如何减少回流重绘" tabindex="-1">如何减少回流重绘？ <a class="header-anchor" href="#如何减少回流重绘" aria-hidden="true">#</a></h3><ul><li>如果想设定元素的样式，通过改变元素的 class 类名 (尽可能在 DOM 树的最里层)</li><li>避免设置多项内联样式</li><li>应用元素的动画，使用 position 属性的 fixed 值或 absolute 值(如前文示例所提)</li><li>避免使用 table 布局，table 中每个元素的大小以及内容的改动，都会导致整个 table 的重新计算</li><li>对于那些复杂的动画，对其设置 position: fixed/absolute，尽可能地使元素脱离文档流，从而减少对其他元素的影响</li><li>使用 css3 硬件加速，可以让 transform、opacity、filters 这些动画不会引起回流重绘</li><li>避免使用 CSS 的表达式（如：calc()）</li><li>避免 js 频繁操作样式，最好一次性重写 style 属性或定义 class 一次性更改。</li><li>避免频繁操作 DOM，创建一个<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/DocumentFragment" target="_blank" rel="noreferrer">documentFragment</a>（Dom 子树），在它上面应用所有 DOM 操作，最后再把它添加到文档中。</li></ul><p>但有时候，我们会无可避免地进行回流或者重绘，我们可以更好使用它们。</p><p>例如：</p><p>你需要修改一个元素的布局。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> el </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">el</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">top</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">offsetTop</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">px</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">left</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">offsetLeft</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">px</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 上述代码每次循环都要获取\`offset\`，可以优化为变量形式保存起来，计算完毕再提交给浏览器发出重新计算的请求</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> el </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">el</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> offLeft </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> el</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">offsetLeft</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  offTop </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> el</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">offsetTop</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">offLeft</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">offTop</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">left </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> offLeft </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">px</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">top </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> offTop </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">px</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>避免 js 改变样式，使用 class 合并去修改样式</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> container </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">container</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">width </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">100px</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">height </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">200px</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">border </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">10px solid red</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">color </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container_style</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10px</span><span style="color:#A6ACCD;"> solid red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> container </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">container</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  container</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">classList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">container_style</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>前者每次单独操作，都去触发一次渲染树更改（新浏览器不会），都去触发一次渲染树更改，从而导致相应的回流与重绘过程。合并之后，等于我们将所有的更改一次性发出。</p><p>我们还可以设置<code>display:none</code>进行离线操作，从页面取出后操作也不会触发回流重绘。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> container </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">container</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">display </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">none</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// 离线操作</span></span>
<span class="line"><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">width </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">100px</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">height </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">200px</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">border </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">10px solid red</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">color </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">（省略了许多类似的后续操作）</span></span>
<span class="line"><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">display </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">block</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div>`,50),e=[p];function r(c,D,y,F,d,i){return a(),l("div",null,e)}const h=s(t,[["render",r]]);export{A as __pageData,h as default};
