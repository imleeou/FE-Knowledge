import{_ as s,c as a,o as n,a as l}from"./app.c0be5ae3.js";const F=JSON.parse('{"title":"常见面试题","description":"","frontmatter":{},"headers":[{"level":2,"title":"0.1 + 0.2 === 0.3 ？为什么？","slug":"decimal-sum","link":"#decimal-sum","children":[{"level":3,"title":"如何解决","slug":"如何解决","link":"#如何解决","children":[]}]},{"level":2,"title":"== 和 === 有什么区别？","slug":"equal-and-strict-equal","link":"#equal-and-strict-equal","children":[]}],"relativePath":"interviewQuestion/oftenMeet.md","lastUpdated":1677566414000}'),o={name:"interviewQuestion/oftenMeet.md"},p=l(`<h1 id="常见面试题" tabindex="-1">常见面试题 <a class="header-anchor" href="#常见面试题" aria-hidden="true">#</a></h1><h2 id="decimal-sum" tabindex="-1">0.1 + 0.2 === 0.3 ？为什么？ <a class="header-anchor" href="#decimal-sum" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.2</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0.30000000000000004</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.3</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"></span></code></pre></div><p><strong>为什么 <code>0.1 + 0.2 !== 0.3</code> 呢？</strong></p><p>我们知道，计算机中所有数据都是以二进制储存的，计算时需要把数据转换成二进制进行计算，再把结果转换成十进制。</p><p>而大多数小数的二进制都是无限循环的，根据 IEEE 754 标准，Number 类型使用 64 位固定长度来表示。</p><p>其中符号位为占 1 位，指数位占 11 位，尾数位占 52 位。</p><p><code>0.1</code> 转成二进制: <code>0.0001100110011001100110011001100110011001100110011001101...</code></p><p>无限循环在截断时丢失精度，导致 <code>0.1 + 0.2</code> 不等于 <code>0.3</code>。</p><h3 id="如何解决" tabindex="-1">如何解决 <a class="header-anchor" href="#如何解决" aria-hidden="true">#</a></h3><ol><li>把计算数字乘以 10 的 N 次方倍相加再除以 10 的 N 次方，即可得到精确的结果。</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">((</span><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0.3</span></span>
<span class="line"></span></code></pre></div><ol start="2"><li>利用 toFixed()</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">b</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">parseFloat</span><span style="color:#F07178;">((</span><span style="color:#A6ACCD;">a</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">b</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toFixed</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.2</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.3</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre></div><h2 id="equal-and-strict-equal" tabindex="-1">== 和 === 有什么区别？ <a class="header-anchor" href="#equal-and-strict-equal" aria-hidden="true">#</a></h2><ol><li>对于 string、number 等基础类型，== 和 === 是有区别的</li></ol><ul><li>a）不同类型间比较，== 之比较 &quot;转化成同一类型后的值&quot; 看 &quot;值&quot; 是否相等，=== 如果类型不同，其结果就是不等。</li><li>b）同类型比较，直接进行 &quot;值&quot; 比较，两者结果一样。</li></ul><ol start="2"><li>对于 Array,Object 等高级类型，== 和 === 是没有区别的</li></ol><p>进行 &quot;指针地址&quot; 比较</p><ol start="3"><li>基础类型与高级类型，== 和 === 是有区别的</li></ol><ul><li>a）对于 ==，将高级转化为基础类型，进行 &quot;值&quot; 比较</li><li>b）因为类型不同，=== 结果为 false</li></ul><ol start="4"><li>!= 为 == 的非运算，!== 为 === 的非运算</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> num</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">；</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> str</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">；</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> test</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">；</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">test </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> num   </span><span style="color:#676E95;font-style:italic;">//true　相同类型　相同值 </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">test </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> num  </span><span style="color:#676E95;font-style:italic;">//true　相同类型　相同值 </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">test </span><span style="color:#89DDFF;">!==</span><span style="color:#A6ACCD;"> num  </span><span style="color:#676E95;font-style:italic;">//false test与num类型相同，其值也相同,　非运算肯定是false </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">num </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> str   </span><span style="color:#676E95;font-style:italic;">//true 　把str转换为数字，检查其是否相等。 </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">num </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> str   </span><span style="color:#676E95;font-style:italic;">//false  == 的 非运算 </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">num </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> str  </span><span style="color:#676E95;font-style:italic;">//false  类型不同，直接返回false </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">num </span><span style="color:#89DDFF;">!==</span><span style="color:#A6ACCD;"> str  </span><span style="color:#676E95;font-style:italic;">//true   num 与 str类型不同 意味着其两者不等　非运算自然是true啦</span></span>
<span class="line"></span></code></pre></div>`,23),e=[p];function t(c,r,y,C,i,A){return n(),a("div",null,e)}const d=s(o,[["render",t]]);export{F as __pageData,d as default};
